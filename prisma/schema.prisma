generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Applicant {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  resume    String? // Optional link to the resume
  appliedAt DateTime @default(now()) // Date and time when the application was submitted
  postId    Int
  post      Post     @relation(fields: [postId], references: [id])
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  posts Post[]
}

model Post {
  id             Int         @id @default(autoincrement())
  position       String // Name of the job position
  description    String // Job description
  createdAt      DateTime    @default(now()) // Date and time when the post was created
  updatedAt      DateTime    @updatedAt // Automatically updates the time when the post is edited
  location       String // Job location (e.g., remote, hybrid, onsite)
  jobType        JobType // Full-time, Part-time, Internship, etc.
  salary         Float? // Optional field for salary
  hiringManager  String // Name of the hiring manager
  companyName    String // Name of the company offering the job
  applicationUrl String? // Link to the application page (if any)
  applicants     Applicant[] // Relationship with applicants who applied for the job

  // Optional fields
  skillsRequired String[] // List of required skills for the job
  status         JobStatus @default(ACTIVE) // ACTIVE, CLOSED, etc.
  User           User?     @relation(fields: [userId], references: [id])
  userId         Int?
}

enum JobType {
  FULL_TIME
  PART_TIME
  INTERNSHIP
  CONTRACT
  FREELANCE
}

enum JobStatus {
  ACTIVE
  CLOSED
  DRAFT
}
